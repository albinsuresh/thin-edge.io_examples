FROM rust:alpine as builder

ARG VERSION=0.7.2

RUN apk add --no-cache musl-dev make git

WORKDIR /app
RUN git clone -b $VERSION https://github.com/thin-edge/thin-edge.io.git
WORKDIR /app/thin-edge.io
RUN cargo build --release


FROM alpine:latest

ARG URL
ENV URL=$URL

ARG DEVICEID
ENV DEVICEID=$DEVICEID

# Otherwise mosquitto fails
VOLUME ["/sys/fs/cgroup"]


# We need curl to get root certificates
RUN apk update \
    && apk upgrade \
    && apk --no-cache add mosquitto curl collectd sudo openrc collectd-mqtt mosquitto-libs

# Create /run/lock
RUN mkdir /run/lock
RUN chmod 1777 /run/lock/

#Add user and groups
RUN addgroup tedge-users
RUN addgroup -S tedge
RUN adduser -g "" -H -D tedge -G tedge

# Create useful directories
RUN mkdir /var/tedge \
    && chown tedge:tedge /var/tedge

# Add tedge-agent to sudoers
RUN echo "%tedge   ALL = (ALL) NOPASSWD: /etc/tedge/sm-plugins/[a-zA-Z0-9]*, /bin/sync, /sbin/init" >/etc/sudoers.d/tedge

# Move built executables from build stage
COPY --from=builder /app/thin-edge.io/target/release/tedge /bin/tedge
COPY --from=builder /app/thin-edge.io/target/release/tedge_mapper /bin/tedge_mapper
COPY --from=builder /app/thin-edge.io/target/release/tedge_agent /bin/tedge_agent
COPY --from=builder /app/thin-edge.io/target/release/c8y_log_plugin /bin/c8y_log_plugin
COPY --from=builder /app/thin-edge.io/target/release/c8y_configuration_plugin /bin/c8y_configuration_plugin
COPY --from=builder /app/thin-edge.io/target/release/tedge_apt_plugin /bin/tedge_apt_plugin
RUN chown root:root /bin/tedge*
RUN chown root:root /bin/c8y*

# Create required directories by --init
RUN tedge --init
RUN sudo -u tedge tedge_mapper --init c8y
RUN sudo -u tedge tedge_mapper --init az
RUN sudo -u tedge tedge_agent --init
RUN sudo -u root c8y_log_plugin --init
RUN sudo -u root c8y_configuration_plugin --init

COPY ./ /app
WORKDIR /app

# Copy mosquitto.conf
COPY ./etc/mosquitto/mosquitto.conf /etc/mosquitto/mosquitto.conf
RUN chmod 444 /etc/mosquitto/mosquitto.conf

# Set OpenRC service scripts to /etc/init.d
COPY ./etc/init.d/* /etc/init.d/
RUN chmod +x /etc/init.d/*


#Configure collectd
COPY ./etc/contrib/collectd/collectd.conf /etc/collectd/collectd.conf

# Copy system.toml
COPY ./etc/contrib/system.toml /etc/tedge/system.toml
RUN chmod 444 /etc/tedge/system.toml

# Copy edge.toml
COPY ./etc/contrib/tedge.toml /etc/tedge/tedge.toml
RUN chmod 444 /etc/tedge/tedge.toml
# Create sm-plugins directory
RUN install -g root -o root -m 755 -d /etc/tedge/sm-plugins

# Copy c8y-log-plugin.toml
COPY ./etc/contrib/c8y-log-plugin.toml /etc/tedge/c8y/c8y-log-plugin.toml
RUN chmod 444 /etc/tedge/c8y/c8y-log-plugin.toml

# Copy c8y-configuration-plugin.toml
COPY ./etc/contrib/c8y-configuration-plugin.toml /etc/tedge/c8y/c8y-configuration-plugin.toml
RUN chmod 444 /etc/tedge/c8y/c8y-configuration-plugin.toml

# Copy plugins to sm-plugin directory
RUN install -g root -o root -m 755 -d /etc/tedge/sm-plugins
RUN cp -r ./etc/plugins/* /etc/tedge/sm-plugins
RUN chown root:root /etc/tedge/sm-plugins/*
RUN chmod +x /etc/tedge/sm-plugins/*
RUN chmod 644 /etc/tedge/sm-plugins/*

# Clean up installation
RUN rm /app -r

# Create a self-signed certificate
RUN sudo tedge cert create --device-id $DEVICEID
RUN sudo tedge config set c8y.url $URL
RUN sudo tedge config set mqtt.external.bind_address 0.0.0.0
RUN sudo tedge config set mqtt.external.port 8883

ENTRYPOINT ["/sbin/init"]
